/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n  mutation LogInMutation($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n": types.LogInMutationDocument,
    "\n  mutation RegistrationMutation(\n    $username: String!\n    $password: String!\n    $email: String!\n  ) {\n    register(username: $username, password: $password, email: $email) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n": types.RegistrationMutationDocument,
    "\n  mutation AddMemberMutation($userId: Int!, $serverId: Int!) {\n    addMember(userId: $userId, serverId: $serverId) {\n      __typename\n      ... on Member {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n": types.AddMemberMutationDocument,
    "\n  query ChatQuery($channelId: Int!) {\n    channel(channelId: $channelId) {\n      __typename\n      ... on Channel {\n        id\n        name\n        server {\n          id\n          name\n        }\n      }\n      ... on Error {\n        message\n      }\n    }\n\n    messages(channelId: $channelId) {\n      ...MessageFragment\n    }\n  }\n": types.ChatQueryDocument,
    "\n  subscription MessageSubscription($channelId: Int!) {\n    newMessage(channelId: $channelId) {\n      ...MessageFragment\n    }\n  }\n": types.MessageSubscriptionDocument,
    "\n  query ChatHeaderQuery($serverId: Int!) {\n    server(serverId: $serverId) {\n      __typename\n      ... on Server {\n        id\n        name\n      }\n    }\n  }\n": types.ChatHeaderQueryDocument,
    "\n  mutation SendMessageMutation(\n    $channelId: Int!\n    $serverId: Int!\n    $userId: Int!\n    $content: String!\n  ) {\n    addMessage(\n      channelId: $channelId\n      serverId: $serverId\n      userId: $userId\n      content: $content\n    ) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on Message {\n        ...MessageFragment\n      }\n    }\n  }\n": types.SendMessageMutationDocument,
    "\n  fragment MessageFragment on Message {\n    id\n    content\n    author {\n      id\n      name\n    }\n    createdAt\n    channelId\n  }\n": types.MessageFragmentFragmentDoc,
    "\n  mutation CreateChannelMutation($name: String!, $serverId: Int!) {\n    addChannel(name: $name, serverId: $serverId) {\n      __typename\n      ... on Channel {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n": types.CreateChannelMutationDocument,
    "\n  mutation CreateServerMutation($name: String!) {\n    addServer(name: $name) {\n      __typename\n      ... on Server {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n": types.CreateServerMutationDocument,
    "\n  mutation AddServerOwnerMutation($serverId: Int!, $userId: Int!) {\n    addMember(serverId: $serverId, userId: $userId, role: OWNER) {\n      __typename\n      ... on Member {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n": types.AddServerOwnerMutationDocument,
    "\n  query ServerSidebarQuery($serverId: Int!) {\n    server(serverId: $serverId) {\n      __typename\n      ... on Server {\n        id\n        name\n        channels {\n          id\n          name\n        }\n        members {\n          id\n          name\n        }\n      }\n    }\n  }\n": types.ServerSidebarQueryDocument,
    "\n  query UserSidebarQuery($userId: Int!) {\n    user(userId: $userId) {\n      __typename\n      ... on User {\n        id\n        name\n        servers {\n          id\n          name\n        }\n      }\n    }\n  }\n": types.UserSidebarQueryDocument,
    "\n  query GetServers($userId: Int!) {\n    user(userId: $userId) {\n      ... on User {\n        id\n        servers {\n          id\n        }\n      }\n    }\n  }\n": types.GetServersDocument,
    "\n  query GetMembers($serverId: Int!) {\n    server(serverId: $serverId) {\n      ... on Server {\n        id\n        members {\n          id\n        }\n      }\n    }\n  }\n": types.GetMembersDocument,
    "\n  query GetChannels($serverId: Int!) {\n    server(serverId: $serverId) {\n      ... on Server {\n        id\n        channels {\n          id\n        }\n      }\n    }\n  }\n": types.GetChannelsDocument,
};

export function graphql(source: "\n  mutation LogInMutation($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation LogInMutation($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation RegistrationMutation(\n    $username: String!\n    $password: String!\n    $email: String!\n  ) {\n    register(username: $username, password: $password, email: $email) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation RegistrationMutation(\n    $username: String!\n    $password: String!\n    $email: String!\n  ) {\n    register(username: $username, password: $password, email: $email) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation AddMemberMutation($userId: Int!, $serverId: Int!) {\n    addMember(userId: $userId, serverId: $serverId) {\n      __typename\n      ... on Member {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AddMemberMutation($userId: Int!, $serverId: Int!) {\n    addMember(userId: $userId, serverId: $serverId) {\n      __typename\n      ... on Member {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query ChatQuery($channelId: Int!) {\n    channel(channelId: $channelId) {\n      __typename\n      ... on Channel {\n        id\n        name\n        server {\n          id\n          name\n        }\n      }\n      ... on Error {\n        message\n      }\n    }\n\n    messages(channelId: $channelId) {\n      ...MessageFragment\n    }\n  }\n"): (typeof documents)["\n  query ChatQuery($channelId: Int!) {\n    channel(channelId: $channelId) {\n      __typename\n      ... on Channel {\n        id\n        name\n        server {\n          id\n          name\n        }\n      }\n      ... on Error {\n        message\n      }\n    }\n\n    messages(channelId: $channelId) {\n      ...MessageFragment\n    }\n  }\n"];
export function graphql(source: "\n  subscription MessageSubscription($channelId: Int!) {\n    newMessage(channelId: $channelId) {\n      ...MessageFragment\n    }\n  }\n"): (typeof documents)["\n  subscription MessageSubscription($channelId: Int!) {\n    newMessage(channelId: $channelId) {\n      ...MessageFragment\n    }\n  }\n"];
export function graphql(source: "\n  query ChatHeaderQuery($serverId: Int!) {\n    server(serverId: $serverId) {\n      __typename\n      ... on Server {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  query ChatHeaderQuery($serverId: Int!) {\n    server(serverId: $serverId) {\n      __typename\n      ... on Server {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation SendMessageMutation(\n    $channelId: Int!\n    $serverId: Int!\n    $userId: Int!\n    $content: String!\n  ) {\n    addMessage(\n      channelId: $channelId\n      serverId: $serverId\n      userId: $userId\n      content: $content\n    ) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on Message {\n        ...MessageFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation SendMessageMutation(\n    $channelId: Int!\n    $serverId: Int!\n    $userId: Int!\n    $content: String!\n  ) {\n    addMessage(\n      channelId: $channelId\n      serverId: $serverId\n      userId: $userId\n      content: $content\n    ) {\n      __typename\n      ... on Error {\n        message\n      }\n      ... on Message {\n        ...MessageFragment\n      }\n    }\n  }\n"];
export function graphql(source: "\n  fragment MessageFragment on Message {\n    id\n    content\n    author {\n      id\n      name\n    }\n    createdAt\n    channelId\n  }\n"): (typeof documents)["\n  fragment MessageFragment on Message {\n    id\n    content\n    author {\n      id\n      name\n    }\n    createdAt\n    channelId\n  }\n"];
export function graphql(source: "\n  mutation CreateChannelMutation($name: String!, $serverId: Int!) {\n    addChannel(name: $name, serverId: $serverId) {\n      __typename\n      ... on Channel {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CreateChannelMutation($name: String!, $serverId: Int!) {\n    addChannel(name: $name, serverId: $serverId) {\n      __typename\n      ... on Channel {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation CreateServerMutation($name: String!) {\n    addServer(name: $name) {\n      __typename\n      ... on Server {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CreateServerMutation($name: String!) {\n    addServer(name: $name) {\n      __typename\n      ... on Server {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation AddServerOwnerMutation($serverId: Int!, $userId: Int!) {\n    addMember(serverId: $serverId, userId: $userId, role: OWNER) {\n      __typename\n      ... on Member {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AddServerOwnerMutation($serverId: Int!, $userId: Int!) {\n    addMember(serverId: $serverId, userId: $userId, role: OWNER) {\n      __typename\n      ... on Member {\n        id\n        name\n      }\n      ... on Error {\n        message\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query ServerSidebarQuery($serverId: Int!) {\n    server(serverId: $serverId) {\n      __typename\n      ... on Server {\n        id\n        name\n        channels {\n          id\n          name\n        }\n        members {\n          id\n          name\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query ServerSidebarQuery($serverId: Int!) {\n    server(serverId: $serverId) {\n      __typename\n      ... on Server {\n        id\n        name\n        channels {\n          id\n          name\n        }\n        members {\n          id\n          name\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query UserSidebarQuery($userId: Int!) {\n    user(userId: $userId) {\n      __typename\n      ... on User {\n        id\n        name\n        servers {\n          id\n          name\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserSidebarQuery($userId: Int!) {\n    user(userId: $userId) {\n      __typename\n      ... on User {\n        id\n        name\n        servers {\n          id\n          name\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetServers($userId: Int!) {\n    user(userId: $userId) {\n      ... on User {\n        id\n        servers {\n          id\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetServers($userId: Int!) {\n    user(userId: $userId) {\n      ... on User {\n        id\n        servers {\n          id\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetMembers($serverId: Int!) {\n    server(serverId: $serverId) {\n      ... on Server {\n        id\n        members {\n          id\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetMembers($serverId: Int!) {\n    server(serverId: $serverId) {\n      ... on Server {\n        id\n        members {\n          id\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetChannels($serverId: Int!) {\n    server(serverId: $serverId) {\n      ... on Server {\n        id\n        channels {\n          id\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetChannels($serverId: Int!) {\n    server(serverId: $serverId) {\n      ... on Server {\n        id\n        channels {\n          id\n        }\n      }\n    }\n  }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;